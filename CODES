1.DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Age Categorization</title>
</head>
<body>
    <h2>Age Categorization</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Enter your age: <input type="text" name="age">
        <input type="submit" name="submit" value="Submit">
    </form>

    <?php
    // Function to categorize age
    function categorizeAge($age) {
        if ($age <= 12) {
            return "Child";
        } elseif ($age <= 19) {
            return "Teenager";
        } elseif ($age <= 59) {
            return "Adult";
        } else {
            return "Senior";
        }
    }

    // Process form data when submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $age = $_POST["age"];
        if (is_numeric($age) && $age >= 0) {
            $category = categorizeAge($age);
            echo "<p>You belong to the category: $category</p>";
        } else {
            echo "<p>Please enter a valid age.</p>";
        }
    }
    ?>
</body>
</html>

2. <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GCD Calculator</title>
</head>
<body>
    <h2>GCD Calculator</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Enter the first number: <input type="text" name="number1"><br>
        Enter the second number: <input type="text" name="number2"><br>
        <input type="submit" name="submit" value="Calculate GCD">
    </form>

    <?php
    // Function to calculate GCD using loops
    function calculateGCD($num1, $num2) {
        $num1 = abs($num1);
        $num2 = abs($num2);
        while ($num2 != 0) {
            $temp = $num1 % $num2;
            $num1 = $num2;
            $num2 = $temp;
        }
        return $num1;
    }

    // Process form data when submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $number1 = $_POST["number1"];
        $number2 = $_POST["number2"];
        
        // Validate inputs
        if (!is_numeric($number1) || !is_numeric($number2)) {
            echo "<p>Please enter valid numbers.</p>";
        } else {
            $gcd = calculateGCD($number1, $number2);
            echo "<p>The Greatest Common Divisor (GCD) of $number1 and $number2 is: $gcd</p>";
        }
    }
    ?>
</body>
</html>

3. <?php

class Ticket {
    private $eventName;
    private $venue;
    private $date;
    private $price;
    private $isBooked;

    public function __construct($eventName, $venue, $date, $price) {
        $this->eventName = $eventName;
        $this->venue = $venue;
        $this->date = $date;
        $this->price = $price;
        $this->isBooked = false;
    }

    // Method to book a ticket
    public function bookTicket() {
        if (!$this->isBooked) {
            $this->isBooked = true;
            return "Ticket booked successfully for {$this->eventName} at {$this->venue} on {$this->date} for {$this->price} USD.";
        } else {
            return "Ticket is already booked.";
        }
    }

    // Method to cancel a booked ticket
    public function cancelTicket() {
        if ($this->isBooked) {
            $this->isBooked = false;
            return "Ticket for {$this->eventName} at {$this->venue} on {$this->date} has been canceled.";
        } else {
            return "Ticket is not booked yet.";
        }
    }

    // Method to generate ticket form for customers
    public function generateTicketForm() {
        echo '
            <form method="post" action="' . htmlspecialchars($_SERVER["PHP_SELF"]) . '">
                <label for="eventName">Event Name:</label>
                <input type="text" name="eventName" id="eventName" value="' . $this->eventName . '" readonly><br>
                <label for="venue">Venue:</label>
                <input type="text" name="venue" id="venue" value="' . $this->venue . '" readonly><br>
                <label for="date">Date:</label>
                <input type="text" name="date" id="date" value="' . $this->date . '" readonly><br>
                <label for="price">Price:</label>
                <input type="text" name="price" id="price" value="' . $this->price . '" readonly><br>
                <input type="submit" name="book" value="Book Ticket">
                <input type="submit" name="cancel" value="Cancel Ticket">
            </form>
        ';
    }
}

// Example usage:

// Create a new Ticket object
$ticket = new Ticket("Concert", "Stadium", "2024-04-20", 50);

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST["book"])) {
        echo $ticket->bookTicket();
    } elseif (isset($_POST["cancel"])) {
        echo $ticket->cancelTicket();
    }
}

// Display ticket form for customers
$ticket->generateTicketForm();

?>
